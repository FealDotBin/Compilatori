<?xml version="1.0" encoding="UTF-8" standalone="no"?><ProgramOp><VarDeclOpList><VarDeclOp><TypeOp>var</TypeOp><IdAndExprList><IdAndExpr><Id>c</Id><IntegerCons>1</IntegerCons></IdAndExpr></IdAndExprList></VarDeclOp></VarDeclOpList><FunDeclOpList><FunDeclOp><isMain>false</isMain><Id>sommac</Id><ParDeclOpList><ParDeclOp><isOut>false</isOut><TypeOp>integer</TypeOp><IdList><Id>a</Id><Id>d</Id></IdList></ParDeclOp><ParDeclOp><isOut>false</isOut><TypeOp>real</TypeOp><IdList><Id>b</Id></IdList></ParDeclOp><ParDeclOp><isOut>true</isOut><TypeOp>string</TypeOp><IdList><Id>size</Id></IdList></ParDeclOp></ParDeclOpList><TypeOp>real</TypeOp><BodyOp><VarDeclOpList><VarDeclOp><TypeOp>real</TypeOp><IdAndExprList><IdAndExpr><Id>result</Id></IdAndExpr></IdAndExprList></VarDeclOp></VarDeclOpList><StatList><AssignOp><IdList><Id>result</Id></IdList><ExprList><AddOp><AddOp><AddOp><Id>a</Id><Id>b</Id></AddOp><Id>c</Id></AddOp><Id>d</Id></AddOp></ExprList></AssignOp><IfOp><GTOp><Id>result</Id><IntegerCons>100</IntegerCons></GTOp><BodyOp><VarDeclOpList><VarDeclOp><TypeOp>var</TypeOp><IdAndExprList><IdAndExpr><Id>valore</Id><StringCons>grande</StringCons></IdAndExpr></IdAndExprList></VarDeclOp></VarDeclOpList><StatList><AssignOp><IdList><Id>size</Id></IdList><ExprList><Id>valore</Id></ExprList></AssignOp></StatList></BodyOp><BodyOp><VarDeclOpList><VarDeclOp><TypeOp>var</TypeOp><IdAndExprList><IdAndExpr><Id>valore</Id><StringCons>piccola</StringCons></IdAndExpr></IdAndExprList></VarDeclOp></VarDeclOpList><StatList><AssignOp><IdList><Id>size</Id></IdList><ExprList><Id>valore</Id></ExprList></AssignOp></StatList></BodyOp></IfOp><ReturnOp><Id>result</Id></ReturnOp></StatList></BodyOp></FunDeclOp><FunDeclOp><isMain>true</isMain><Id>esempio</Id><ParDeclOpList/><TypeOp>void</TypeOp><BodyOp><VarDeclOpList><VarDeclOp><TypeOp>var</TypeOp><IdAndExprList><IdAndExpr><Id>a</Id><IntegerCons>1</IntegerCons></IdAndExpr><IdAndExpr><Id>b</Id><RealCons>2.2</RealCons></IdAndExpr><IdAndExpr><Id>x</Id><IntegerCons>3</IntegerCons></IdAndExpr></IdAndExprList></VarDeclOp><VarDeclOp><TypeOp>string</TypeOp><IdAndExprList><IdAndExpr><Id>taglia</Id></IdAndExpr><IdAndExpr><Id>ans1</Id></IdAndExpr></IdAndExprList></VarDeclOp><VarDeclOp><TypeOp>var</TypeOp><IdAndExprList><IdAndExpr><Id>ans</Id><StringCons>no</StringCons></IdAndExpr></IdAndExprList></VarDeclOp><VarDeclOp><TypeOp>real</TypeOp><IdAndExprList><IdAndExpr><Id>risultato</Id><FunCallOpExpr><Id>sommac</Id><ExprList><Id>a</Id><Id>x</Id><Id>b</Id><Id>taglia</Id></ExprList></FunCallOpExpr></IdAndExpr></IdAndExprList></VarDeclOp></VarDeclOpList><StatList><FunCallOpStat><Id>stampa</Id><ExprList><StrCatOp><StrCatOp><StrCatOp><StrCatOp><StrCatOp><StrCatOp><StrCatOp><StringCons>la somma di </StringCons><Id>a</Id></StrCatOp><StringCons> e </StringCons></StrCatOp><Id>b</Id></StrCatOp><StringCons> incrementata di </StringCons></StrCatOp><Id>c</Id></StrCatOp><StringCons> è </StringCons></StrCatOp><Id>taglia</Id></StrCatOp></ExprList></FunCallOpStat><FunCallOpStat><Id>stampa</Id><ExprList><StrCatOp><StringCons>ed è pari a </StringCons><Id>risultato</Id></StrCatOp></ExprList></FunCallOpStat><WriteOp><isLn>true</isLn><ExprList><StringCons>vuoi continuare? (si/no) - inserisci due volte la risposta</StringCons></ExprList></WriteOp><ReadOp><IdList><Id>ans</Id><Id>ans1</Id></IdList></ReadOp><WhileOp><EQOp><Id>ans</Id><StringCons>si</StringCons></EQOp><BodyOp><VarDeclOpList/><StatList><ReadOp><IdList><Id>a</Id></IdList><StringCons>inserisci un intero:</StringCons></ReadOp><ReadOp><IdList><Id>b</Id></IdList><StringCons>inserisci un reale:</StringCons></ReadOp><AssignOp><IdList><Id>risultato</Id></IdList><ExprList><FunCallOpExpr><Id>sommac</Id><ExprList><Id>a</Id><Id>b</Id><Id>taglia</Id></ExprList></FunCallOpExpr></ExprList></AssignOp><FunCallOpStat><Id>stampa</Id><ExprList><StrCatOp><StrCatOp><StrCatOp><StrCatOp><StrCatOp><StrCatOp><StrCatOp><StringCons>la somma di </StringCons><Id>a</Id></StrCatOp><StringCons> e </StringCons></StrCatOp><Id>b</Id></StrCatOp><StringCons> incrementata di </StringCons></StrCatOp><Id>c</Id></StrCatOp><StringCons> è </StringCons></StrCatOp><Id>taglia</Id></StrCatOp></ExprList></FunCallOpStat><FunCallOpStat><Id>stampa</Id><ExprList><StrCatOp><StringCons> ed è pari a </StringCons><Id>risultato</Id></StrCatOp></ExprList></FunCallOpStat><ReadOp><IdList><Id>ans</Id></IdList><StringCons>vuoi continuare? (si/no):	</StringCons></ReadOp></StatList></BodyOp></WhileOp><WriteOp><isLn>true</isLn><ExprList><StringCons/></ExprList></WriteOp><WriteOp><isLn>false</isLn><ExprList><StringCons>ciao</StringCons></ExprList></WriteOp></StatList></BodyOp></FunDeclOp><FunDeclOp><isMain>false</isMain><Id>stampa</Id><ParDeclOpList><ParDeclOp><isOut>false</isOut><TypeOp>string</TypeOp><IdList><Id>messaggio</Id></IdList></ParDeclOp></ParDeclOpList><TypeOp>void</TypeOp><BodyOp><VarDeclOpList/><StatList><ForOp><Id>i</Id><IntegerCons>1</IntegerCons><IntegerCons>4</IntegerCons><BodyOp><VarDeclOpList/><StatList><WriteOp><isLn>true</isLn><ExprList><StringCons/></ExprList></WriteOp></StatList></BodyOp></ForOp><WriteOp><isLn>false</isLn><ExprList><Id>messaggio</Id></ExprList></WriteOp></StatList></BodyOp></FunDeclOp></FunDeclOpList></ProgramOp>